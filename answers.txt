• What is a gitignore file and what should it include for a Java project?
ans:
A gitignore file specifies intentionally untracked files(or patterns) that Git should ignore.
It's usually used to avoid committing transient files from your working directory that aren't useful to other collaborators, such as compilation products, temporary files IDEs create, etc.

For JAVA, it should include:
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

##############################
## Eclipse
##############################
.settings/
bin/
tmp/
.metadata
.classpath
.project
*.tmp
*.bak
*.swp
*~.nib
local.properties
.loadpath

-----------------------------------------------------------------------------------------------

• What does fast-forward in Git mean?

If a feature branch - lets say "branch X" is ahead of the master, and the master has not diverged (has had no commits), then at the time of merging branch X to master GIT recognizes this situation and will just point master to the latest commit of the feature branch (branch X).

------------------------------------------------------------------------------------------------

• Why should you have different branches?

We should have different branches to protect the 'master' branch from getting corrupted/unwanted commits being pushed onto it. Our master branch should ideally always have working code and should be treated as the 'production' code.

Branching also allows to collaborate with a number of team members. Changes to the branch don't affect other developers on the team. This is a good thing because features under development can create instability, which would be highly disruptive if all work was happening on the main code line.
------------------------------------------------------------------------------------------------

• In a project how many remote Git repositories do you usually have?

Usually we only have 1 remote Git repository in a project.